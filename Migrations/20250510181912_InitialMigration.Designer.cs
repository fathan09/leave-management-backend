// <auto-generated />
using LeaveBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LeaveBackend.Migrations
{
    [DbContext(typeof(LeaveContext))]
    [Migration("20250510181912_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LeaveBackend.Entities.Leave", b =>
                {
                    b.Property<int>("leaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("leaveId"));

                    b.Property<string>("employeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("leaveType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("staffId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("leaveId");

                    b.ToTable("Leaves");
                });
#pragma warning restore 612, 618
        }
    }
}
